[tool.poetry]
name = "newsapi-test-suite"
version = "1.0.0"
description = "Test suite for NewsAPI, including manual test design and automated tests and BDD scenarios using pytest and pytest-bdd."
authors = ["ali <alihezarpisheh@outlook.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
pytest = "^8.3.4"
pytest-bdd = "^8.1.0"
pytest-asyncio = "^0.25.0"
pytest-randomly = "^3.16.0"
pytest-html = "^4.1.1"
httpx = "^0.28.1"
tox = "^4.23.2"


[tool.poetry.group.dev.dependencies]
isort = "^5.13.2"
mypy = "^1.14.1"
pre-commit = "^4.0.1"
ruff = "^0.8.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
lint.select = [
    "E",  # pycodestyle
    "W",  # pycodestyle
    "F",  # pyflakes
    "UP",  # pyupgrade
    "C90",  # mccabe
    "D",  # pydocstyle
    "I",  # isort
    "RUF",  # Ruff specific rules
]
lint.ignore = ["D104"]
lint.fixable = [
    "F401",  # Remove unused imports.
    "RUF100",  # Remove unused noqa comments.
]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"


[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true


[tool.mypy]
strict = true
ignore_missing_imports = true


[tool.pytest.ini_options]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
    "-v",
]
markers = [
    "smoke: Tests focusing on essential and critical functionality",
    "exception: Tests checking how the application handles exceptions and error scenarios",
    "asyncio: Asynchronous tests using the pytest-asyncio plugin",
]
required_plugins = [
    "pytest-randomly",
]

testpaths = "tests"
xfail_strict = true

asyncio_mode = "auto"
