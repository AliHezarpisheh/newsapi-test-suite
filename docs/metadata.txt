I will record my observations about the web service here. This is not a professional document or a formal bug report. Consider this file a collection of questions
and personal thoughts gathered during the testing process.


Missed in the documents:
- (This is not a defect, ask the team.) What should happen if the API key has been sent in 2 ways (query param and HTTP header), and one of them is valid
  while the other one is invalid? Currently, the apiKey query param has precedence over the headers. Is this the expected behavior? I have assumed this is the
  expected behavior and wrote my tests based on this assumption. Probably, in a real project, I wouldn't make these types of assumptions.

- (This is a defect, document it.) Inconsistencies in the API response when requesting more than 100 objects per page. For a pageSize of 101, the API results
  in a 400 Bad Request, indicating that the pageSize is too large. But for a pageSize greater than 200, the API responds with a 426 Upgrade Required, stating
  that the client should upgrade its plan. Is this behavior based on plans, and are these results intentional? Or are there inconsistencies in the results?

- (This is a defect, document it.) No code or status params when a null/None or empty string is passed to the page or pageSize query params. These values are breaking the
  API response body format, and it seems they are not handled properly in the back-end.

- (This is a defect, document it.) When a string without any digits is passed to the page or pageSize param, the API responds successfully. Is this the expected behavior?
  In other scenarios with invalid page param values, the API raises an error.

- (This is a defect, document it.) When a negative value is passed to the pageSize param, the server breaks, responding with 400 Bad Request and the body:
  {'status': 'error', 'code': 'unexpectedError', 'message': 'Something went wrong. Your request may be malformed - please check the params and try again.'}.
  (-100 was the value)

- (This is a defect, document it.) Why are the server errors in 400 Bad Request? This behavior doesn't align with the REST API rules.

- (This is a defect, document it.) Passing negative values to the pageSize param results in a successful response, but this should not happen and should be handled with an
  informative response. (-1 was the value)

- (This is not a defect, a documentation problem.) The sources index is not actually showing the sources index.
